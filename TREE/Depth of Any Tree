#include<bits/stdc++.h>
using namespace std;
const int N = 1e5+7;
vector<int>g[N];
int depth[N];

void DFS(int vertex,int par = -1){
    for(int child:g[vertex]){
        if(child==par) continue;
        depth[child] = depth[vertex]+1;
        DFS(child,vertex);
    }
}
int main(){

    int node;
    cin>>node;

    for(int i=0;i<node;i++){
        int n1,n2;
        cin>>n1>>n2;
        g[n1].push_back(n2);
        g[n2].push_back(n1);
    }

    DFS(1);

    int maxDepth = 0;
    int maxDepth_node=-1;

    for(int i=1;i<=node;i++){
        if(maxDepth<depth[i]){
            maxDepth=depth[i];
            maxDepth_node=i;
        }
        depth[i]=0;
    }

    DFS(maxDepth_node);

    maxDepth = -1;

    for(int i=1;i<=node;i++){
        if(maxDepth < depth[i]){
            maxDepth = depth[i];
        }
    }

    cout<<maxDepth<<endl;

}

Sample input :

14
1 2
1 3
1 13
2 5
5 6
5 7
5 8
8 12
3 4
4 9
4 10
10 11
12 14

Sample output : 

13
