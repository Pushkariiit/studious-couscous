
#include<bits/stdc++.h>
using namespace std;
const int N = 1e5+7;
vector<int>g[N];
int subtree_sum[N];
int even_cnt[N];
void DFS(int vertex,int par){
    if(vertex%2==0){
        even_cnt[vertex]++;
    }
    subtree_sum[vertex]+=vertex;
    
    for(int child:g[vertex]){
        if(child==par) continue;
        DFS(child,vertex);
        subtree_sum[vertex]+=subtree_sum[child];
        even_cnt[vertex]+=even_cnt[child];
    }
}
int main(){
    int n;
    cin>>n;
    for(int i=0;i<n-1;i++){
        int n1,n2;
        cin>>n1>>n2;
        g[n1].push_back(n2);
        g[n2].push_back(n1);
    }
    DFS(1,0);
    cout<<"Subtree_Sum"<<endl;
    for(int i=1;i<=n;i++){
        cout<<subtree_sum[i]<<" ";
    }cout<<endl;
    cout<<"Even Count"<<endl;
    for(int i=1;i<=n;i++){
        cout<<even_cnt[i]<<" ";
    }cout<<endl;
}

